<div id="<%= dom_id link %>" class="w-full sm:w-auto my-5">
  <div class="bg-white dark:bg-gray-800 shadow-2xl rounded-2xl p-6 space-y-4 border border-gray-200 dark:border-gray-700 transition-all duration-300 hover:shadow-blue-200 dark:hover:shadow-blue-900 relative">
    
    <!-- Short Link -->
    <div>
      <strong class="block text-gray-700 dark:text-gray-200 text-sm font-semibold mb-1">‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂‡ßá‡¶∞ ‡ß¨‡ß™‡¶ü‡¶ø ‡¶ú‡ßá‡¶≤‡¶æ:</strong>
      <p class="text-blue-600 dark:text-blue-400 break-all text-sm underline decoration-dotted">
       <% countries = [
                  "‡¶¢‡¶æ‡¶ï‡¶æ", "‡¶´‡¶∞‡¶ø‡¶¶‡¶™‡ßÅ‡¶∞", "‡¶ó‡¶æ‡¶ú‡ßÄ‡¶™‡ßÅ‡¶∞", "‡¶ó‡ßã‡¶™‡¶æ‡¶≤‡¶ó‡¶û‡ßç‡¶ú", "‡¶ï‡¶ø‡¶∂‡ßã‡¶∞‡¶ó‡¶û‡ßç‡¶ú", "‡¶Æ‡¶æ‡¶¶‡¶æ‡¶∞‡ßÄ‡¶™‡ßÅ‡¶∞", "‡¶Æ‡¶æ‡¶®‡¶ø‡¶ï‡¶ó‡¶û‡ßç‡¶ú", "‡¶Æ‡ßÅ‡¶®‡ßç‡¶∏‡¶ø‡¶ó‡¶û‡ßç‡¶ú", "‡¶®‡¶æ‡¶∞‡¶æ‡ßü‡¶£‡¶ó‡¶û‡ßç‡¶ú", "‡¶®‡¶∞‡¶∏‡¶ø‡¶Ç‡¶¶‡ßÄ", "‡¶∞‡¶æ‡¶ú‡¶¨‡¶æ‡ßú‡ßÄ", "‡¶∂‡¶∞‡ßÄ‡ßü‡¶§‡¶™‡ßÅ‡¶∞", "‡¶ü‡¶æ‡¶ô‡ßç‡¶ó‡¶æ‡¶á‡¶≤",
                  "‡¶ö‡¶ü‡ßç‡¶ü‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ", "‡¶ï‡¶ï‡ßç‡¶∏‡¶¨‡¶æ‡¶ú‡¶æ‡¶∞", "‡¶¨‡ßç‡¶∞‡¶æ‡¶π‡ßç‡¶Æ‡¶£‡¶¨‡¶æ‡ßú‡¶ø‡ßü‡¶æ", "‡¶ö‡¶æ‡¶Å‡¶¶‡¶™‡ßÅ‡¶∞", "‡¶ï‡ßÅ‡¶Æ‡¶ø‡¶≤‡ßç‡¶≤‡¶æ", "‡¶´‡ßá‡¶®‡ßÄ", "‡¶≤‡¶ï‡ßç‡¶∑‡ßç‡¶Æ‡ßÄ‡¶™‡ßÅ‡¶∞", "‡¶®‡ßã‡ßü‡¶æ‡¶ñ‡¶æ‡¶≤‡ßÄ", "‡¶ñ‡¶æ‡¶ó‡ßú‡¶æ‡¶õ‡ßú‡¶ø",                "‡¶∞‡¶æ‡¶ô‡ßç‡¶ó‡¶æ‡¶Æ‡¶æ‡¶ü‡¶ø", "‡¶¨‡¶æ‡¶®‡ßç‡¶¶‡¶∞‡¶¨‡¶æ‡¶®",
                  "‡¶∏‡¶ø‡¶∞‡¶æ‡¶ú‡¶ó‡¶û‡ßç‡¶ú", "‡¶™‡¶æ‡¶¨‡¶®‡¶æ", "‡¶¨‡¶ó‡ßÅ‡ßú‡¶æ", "‡¶∞‡¶æ‡¶ú‡¶∂‡¶æ‡¶π‡ßÄ", "‡¶®‡¶æ‡¶ü‡ßã‡¶∞", "‡¶ú‡ßü‡¶™‡ßÅ‡¶∞‡¶π‡¶æ‡¶ü", "‡¶ö‡¶æ‡¶Å‡¶™‡¶æ‡¶á‡¶®‡¶¨‡¶æ‡¶¨‡¶ó‡¶û‡ßç‡¶ú", "‡¶®‡¶ì‡¶ó‡¶æ‡¶Å",
                  "‡¶Ø‡¶∂‡ßã‡¶∞", "‡¶ï‡ßÅ‡¶∑‡ßç‡¶ü‡¶ø‡ßü‡¶æ", "‡¶Æ‡¶æ‡¶ó‡ßÅ‡¶∞‡¶æ", "‡¶ö‡ßÅ‡ßü‡¶æ‡¶°‡¶æ‡¶ô‡ßç‡¶ó‡¶æ", "‡¶ù‡¶ø‡¶®‡¶æ‡¶á‡¶¶‡¶π", "‡¶ñ‡ßÅ‡¶≤‡¶®‡¶æ", "‡¶¨‡¶æ‡¶ó‡ßá‡¶∞‡¶π‡¶æ‡¶ü", "‡¶∏‡¶æ‡¶§‡¶ï‡ßç‡¶∑‡ßÄ‡¶∞‡¶æ", "‡¶®‡ßú‡¶æ‡¶á‡¶≤", "‡¶Æ‡ßá‡¶π‡ßá‡¶∞‡¶™‡ßÅ‡¶∞",
                  "‡¶¨‡¶∞‡¶ø‡¶∂‡¶æ‡¶≤", "‡¶™‡¶ü‡ßÅ‡ßü‡¶æ‡¶ñ‡¶æ‡¶≤‡ßÄ", "‡¶≠‡ßã‡¶≤‡¶æ", "‡¶™‡¶ø‡¶∞‡ßã‡¶ú‡¶™‡ßÅ‡¶∞", "‡¶ù‡¶æ‡¶≤‡¶ï‡¶æ‡¶†‡¶ø", "‡¶¨‡¶∞‡¶ó‡ßÅ‡¶®‡¶æ",
                  "‡¶∏‡¶ø‡¶≤‡ßá‡¶ü", "‡¶Æ‡ßå‡¶≤‡¶≠‡ßÄ‡¶¨‡¶æ‡¶ú‡¶æ‡¶∞", "‡¶π‡¶¨‡¶ø‡¶ó‡¶û‡ßç‡¶ú", "‡¶∏‡ßÅ‡¶®‡¶æ‡¶Æ‡¶ó‡¶û‡ßç‡¶ú",
                  "‡¶∞‡¶Ç‡¶™‡ßÅ‡¶∞", "‡¶¶‡¶ø‡¶®‡¶æ‡¶ú‡¶™‡ßÅ‡¶∞", "‡¶®‡ßÄ‡¶≤‡¶´‡¶æ‡¶Æ‡¶æ‡¶∞‡ßÄ", "‡¶†‡¶æ‡¶ï‡ßÅ‡¶∞‡¶ó‡¶æ‡¶Å‡¶ì", "‡¶ï‡ßÅ‡ßú‡¶ø‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ", "‡¶ó‡¶æ‡¶á‡¶¨‡¶æ‡¶®‡ßç‡¶ß‡¶æ", "‡¶≤‡¶æ‡¶≤‡¶Æ‡¶®‡¶ø‡¶∞‡¶π‡¶æ‡¶ü", "‡¶™‡¶û‡ßç‡¶ö‡¶ó‡ßú",
                  "‡¶Æ‡ßü‡¶Æ‡¶®‡¶∏‡¶ø‡¶Ç‡¶π", "‡¶ú‡¶æ‡¶Æ‡¶æ‡¶≤‡¶™‡ßÅ‡¶∞", "‡¶®‡ßá‡¶§‡ßç‡¶∞‡¶ï‡ßã‡¶®‡¶æ", "‡¶∂‡ßá‡¶∞‡¶™‡ßÅ‡¶∞"
      ] %>
      <% country_name = countries.sample %>

          <%= link_to country_name, link.url, target: "_blank", rel: "noopener", class: "text-blue-600 dark:text-blue-400 break-all text-sm underline decoration-dotted" %>

      </p>
    </div>

    <!-- Click & Earn Button -->
    <button data-link-url="<%= link.url %>" data-link-id="<%= link.id %>"
            class="start-click bg-blue-600 hover:bg-blue-700 active:scale-95 transition-transform text-white font-bold py-2 px-4 rounded-full shadow-md focus:outline-none">
      Click & Earn
    </button>

    <!-- Countdown Display -->
    <div id="countdown-<%= link.id %>" class="hidden text-center text-yellow-500 font-bold text-lg mt-4"></div>

    <!-- Hidden Form for Auto-Submit -->
    <%= form_with url: click_link_path(link), method: :post, local: true, html: { id: "auto-submit-form-#{link.id}", class: "hidden" } do %>
      <%= hidden_field_tag :auto_claim, true %>
    <% end %>

    <!-- Optional Ripple Effect -->
    <span class="ripple-effect hidden absolute inset-0 bg-blue-300 opacity-30 rounded-full animate-ping pointer-events-none"></span>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    document.querySelectorAll(".start-click").forEach(button => {
      button.addEventListener("click", () => {
        const linkUrl = button.getAttribute("data-link-url");
        const linkId = button.getAttribute("data-link-id");

        if (button.clicked) return;
        button.clicked = true;

        // Open link in a new tab
        const newTab = window.open(linkUrl, "_blank");

        const parentDiv = button.closest("div[id]");
        const countdownEl = parentDiv.querySelector("#countdown-" + linkId);
        const autoSubmitForm = parentDiv.querySelector("#auto-submit-form-" + linkId);

        let timeLeft = 20;
        let rewardCompleted = false;

        countdownEl.classList.remove("hidden");
        countdownEl.textContent = `‚è≥ Wait ${timeLeft}s to earn reward...`;

        button.disabled = true;
        button.classList.add("opacity-50", "cursor-not-allowed");

        const timer = setInterval(() => {
          timeLeft--;
          countdownEl.textContent = `‚è≥ Wait ${timeLeft}s to earn reward...`;

          if (timeLeft <= 0) {
            clearInterval(timer);
            rewardCompleted = true;
            countdownEl.textContent = "üéâ Reward earned!";
            autoSubmitForm.submit();
          }
        }, 1000);

        // Fallback: monitor if the tab was closed early
        const cancelCheckInterval = setInterval(() => {
          if (newTab && newTab.closed && !rewardCompleted) {
            clearInterval(timer);
            clearInterval(cancelCheckInterval);
            alert("‚ö†Ô∏è Reward cancelled because the tab was closed too early.");
            location.reload(); // Refresh the page
          }

          if (rewardCompleted) {
            clearInterval(cancelCheckInterval);
          }
        }, 1000);
      });
    });
  });
</script>
