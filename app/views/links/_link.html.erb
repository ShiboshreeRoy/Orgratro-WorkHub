<!-- Wrapper -->
<div class="max-w-6xl mx-auto px-4">

  <!-- Grid of Link Cards -->
  <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
    <% @links.each do |link| %>
      <div id="<%= dom_id link %>" 
           class="task-block transition duration-500 opacity-100 scale-100"
           data-link-id="<%= link.id %>" 
           data-link-url="<%= link.url %>">

        <div class="bg-white dark:bg-gray-900 shadow-lg rounded-2xl p-6 space-y-5 border border-gray-200 dark:border-gray-700 hover:shadow-blue-400 dark:hover:shadow-blue-900 transition-shadow duration-300">
          
          <!-- Click & Earn Button -->
          <button 
            class="start-click w-full bg-blue-600 hover:bg-blue-700 active:scale-95 transition-transform text-white font-semibold py-3 px-6 rounded-full shadow-md focus:outline-none focus:ring-4 focus:ring-blue-400 focus:ring-opacity-50">
            Click & Earn
          </button>

          <!-- Status -->
          <div id="status-<%= link.id %>" class="hidden text-center text-green-500 font-bold text-lg mt-3"></div>
          <div id="countdown-<%= link.id %>" class="hidden text-center text-yellow-500 font-semibold mt-2"></div>

          <!-- Auto Submit Form -->
          <%= form_with url: click_link_path(link), method: :post, local: true, html: { id: "auto-submit-form-#{link.id}", class: "hidden" } do %>
            <%= hidden_field_tag :auto_claim, true %>
          <% end %>
        </div>
      </div>
    <% end %>
  </div>


</div>


<script>
document.addEventListener("DOMContentLoaded", () => {
  const blocks = document.querySelectorAll(".task-block");
  const cooldown = 24 * 60 * 60 * 1000; // 24h

  blocks.forEach(block => {
    const linkId = block.dataset.linkId;
    const linkUrl = block.dataset.linkUrl;
    const button = block.querySelector(".start-click");
    const statusEl = document.querySelector(`#status-${linkId}`);
    const countdownEl = document.querySelector(`#countdown-${linkId}`);
    const form = document.querySelector(`#auto-submit-form-${linkId}`);
    const key = `task_${linkId}`;

    // ✅ Check saved state
    const saved = localStorage.getItem(key);
    if (saved) {
      try {
        const parsed = JSON.parse(saved);
        if (Date.now() - parsed.time < cooldown) {
          hideBlock(block);
          return;
        } else {
          localStorage.removeItem(key);
          document.cookie = `${key}=; path=/; max-age=0`;
        }
      } catch { localStorage.removeItem(key); }
    }

    // ✅ Handle click
    button.addEventListener("click", () => {
      if (button.clicked) return;
      button.clicked = true;

      const newTab = window.open(`/click_window/${linkId}?url=${encodeURIComponent(linkUrl)}`, "_blank");
      if (!newTab) {
        statusEl.textContent = "❌ Popup blocked! Please allow popups.";
        statusEl.classList.remove("hidden");
        button.clicked = false;
        return;
      }

      // Show countdown
      let timeLeft = 10;
      countdownEl.classList.remove("hidden");
      countdownEl.textContent = `⏳ Please wait ${timeLeft}s...`;
      
      const timer = setInterval(() => {
        timeLeft--;
        if (timeLeft > 0) {
          countdownEl.textContent = `⏳ Please wait ${timeLeft}s...`;
        } else {
          clearInterval(timer);

          // ✅ Confirm completion
          localStorage.setItem(key, JSON.stringify({ status: "done", time: Date.now() }));
          document.cookie = `${key}=done; path=/; max-age=${60 * 60 * 24 * 2}`;
          form.submit();
          statusEl.textContent = "🎉 Task completed successfully!";
          statusEl.classList.remove("hidden");

          // Animate & hide block
          hideBlock(block);
        }
      }, 1000);
    });
  });

  // ✅ Always show at least one link
  if (![...blocks].some(b => b.style.display !== "none") && blocks.length > 0) {
    blocks[Math.floor(Math.random() * blocks.length)].style.display = "block";
  }

  // 🔹 Helper: Smooth hide animation
  function hideBlock(block) {
    block.classList.add("opacity-0", "scale-95");
    setTimeout(() => block.style.display = "none", 500); // match transition duration
  }
});
</script>
